function void test_changed_order(list ls[null],matrices MS[null])

    if !exists(MS)
        print "MS is not defined"
    else 
        print "MS defined"
    endif

    if !exists(ls)
        print "List not defined"
    else
        print "List defined"
    endif

end function




function void test(matrices MS[null], list ls[null], matrix m[null])

    if !exists(MS)
        print "MS is not defined"
    else 	
        print "MS defined"
    endif

    if !exists(ls) #problem: if ls exists on higher level...
        print "List not defined"
    else
        print "List defined"
        if !(ls!=null)
            print "but its empty (on this scope)"
        endif
		if ls==null
            print "also '==' check ok"
        endif
    endif

    if !exists(m)
        print "m is not defined"
    else 	
        print "m defined"
    endif

end function

#test
open denmark.gdt -q
matrix m1 = {LRM}
matrix m2 = {IBO}
list ls = LRM IBO
matrices MS = null
MS += m1
MS += m2

print "Test with both, matrices and list"
test(MS,ls)
print "Test with neither list nor matrices"
test()
print "Test with only matrices"
test(MS)
print "Test with only list"
test(null,ls)
print "Test with only matrix"
test(null,null,m1)
print "Test explicitly empty"
test(null,null,null)


print "Test with only list changed order (so not passing null)"
test_changed_order(ls)
